{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const checkAdminStatus = async uid => {\n  try {\n    const userRef = doc(db, 'admins', uid);\n    const userSnap = await getDoc(userRef);\n    return userSnap.exists();\n  } catch (error) {\n    console.error('Error checking admin status:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","checkAdminStatus","uid","userRef","userSnap","exists","error","console"],"sources":["/Users/aref/Desktop/little-bamiyan/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport const checkAdminStatus = async (uid) => {\n  try {\n    const userRef = doc(db, 'admins', uid);\n    const userSnap = await getDoc(userRef);\n    return userSnap.exists();\n  } catch (error) {\n    console.error('Error checking admin status:', error);\n    return false;\n  }\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAChG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAE9D,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW;AACrB,CAAC;AAED,MAAMC,GAAG,GAAGvB,aAAa,CAACQ,cAAc,CAAC;AACzC,OAAO,MAAMgB,IAAI,GAAGvB,OAAO,CAACsB,GAAG,CAAC;AAChC,OAAO,MAAME,EAAE,GAAGpB,YAAY,CAACkB,GAAG,CAAC;AAEnC,OAAO,MAAMG,gBAAgB,GAAG,MAAOC,GAAG,IAAK;EAC7C,IAAI;IACF,MAAMC,OAAO,GAAGtB,GAAG,CAACmB,EAAE,EAAE,QAAQ,EAAEE,GAAG,CAAC;IACtC,MAAME,QAAQ,GAAG,MAAMtB,MAAM,CAACqB,OAAO,CAAC;IACtC,OAAOC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}